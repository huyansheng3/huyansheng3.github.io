"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/index.html","d1a6b8327f8c64d2fbd55ad915b22036"],["/static/css/main.62b96a06.css","a98d2df362006f3bb927e8a02cb53318"],["/static/js/0.cb87ddc9.chunk.js","26679f07c1fefa426f59bc01c9292cee"],["/static/js/1.2bbef32d.chunk.js","be7e2836fb0a5c0ca898dbc442bb04fb"],["/static/js/10.ee38f962.chunk.js","43cfbb2a575d0e0dc9058f1cbe9a9633"],["/static/js/11.6f98561a.chunk.js","c5b696dafa2d7dbbdae39295f0580e1f"],["/static/js/12.a45899a6.chunk.js","513693bc1326c7ca77900f7cb96e5cf6"],["/static/js/13.7c3d3532.chunk.js","00432476a7ebe1084df13d70c4f975e7"],["/static/js/14.8f576c49.chunk.js","e48ec3cc19445adc82bfb7615eb21c6b"],["/static/js/15.54f5c0f2.chunk.js","c9e9d3a53adfde6b809dd1a93c95407f"],["/static/js/2.e444baec.chunk.js","7caa7bf5a4315df90de49576e9b82366"],["/static/js/3.fe8750c9.chunk.js","09c9c9f4d19590c1032647aa2000f287"],["/static/js/4.37165343.chunk.js","dfa888975d01a229537976fbe6f6d5da"],["/static/js/5.fe24a551.chunk.js","0a5cc9d228589a5a9d1ed87f1fe8f5f8"],["/static/js/6.f8a6881d.chunk.js","2b22b90cb97c679420c62088e764f785"],["/static/js/7.7681fe48.chunk.js","36443c861cec459b6428c4fd5a01a63a"],["/static/js/8.2fff4e6f.chunk.js","3b76e01021b5153baa2e51a19741d770"],["/static/js/9.5f071846.chunk.js","71a8ddf7dc95a396d53c69ea67143d8b"],["/static/js/main.2a2125cc.js","b49b8930ee8be89d127270f59da6e87c"],["/static/media/octicons.190e7257.svg","190e72572ee84190f4777765fa49fc47"],["/static/media/octicons.d038ccbc.eot","d038ccbc4a99be24f33a54b482b2422e"],["/static/media/octicons.de59a972.woff2","de59a97248b44599e6747a27a943f738"],["/static/media/octicons.e0d4a324.ttf","e0d4a324833e13be7d4fa762146d0a71"],["/static/media/octicons.ee5b1bee.woff","ee5b1bee959a95bd43b223ec901d098a"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,c){var n=new URL(e);return c&&n.pathname.match(c)||(n.search+=(n.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),n.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],c=new URL(t,self.location),n=createCacheKey(c,hashParamName,a,/\.\w{8}\./);return[c.toString(),n]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var c=new Request(a,{credentials:"same-origin"});return fetch(c).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL("/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});